# Powered By Ansible

# --------------Install & configure etcd"on master/slave--------------------

- name: Install {{ pkg_name }} for slave
  package: name={{ pkg_name }} state=latest

- name: create a local user and group that can own etcd packages to secuirty
  shell: /usr/sbin/useradd -U -d /var/lib/etcd -m -c "etcd user" -s /sbin/nologin etcd
  ignore_errors: yes
- name: Copy etcd
  copy:
    src: "files/{{ ansible_os_family }}/etcd.conf"
    dest: /etc/etcd/etcd.conf
- name: start etcd
  service: name=etcd state=started


#-----------Install and configure flanneld "on master/slave"-----------------
- name: make sure docker stop
  service: name=docker state=stopped
  ignore_errors: yes
  tags: flannel
- name: remove docker0 berfore start flannel if exsist
  command: /sbin/ip link delete docker0
  ignore_errors: yes
- name: Copy flannel-config.json
  copy:
    src: "files/{{ ansible_os_family }}/flannel-config.json"
    dest: "/etc/sysconfig/"
- name: configure etcd to hold the network overlay configuration on master
  shell: /bin/etcdctl mkdir /kube-centos/network  && /bin/etcdctl set /kube-centos/network/config < "/etc/sysconfig/flannel-config.json"
  ignore_errors: yes
- name: Copy flanneld
  copy:
    src: "files/{{ ansible_os_family }}/flanneld"
    dest:  "/etc/sysconfig/flanneld"


#-----------------------install Kubernetes slave package----------------

- name: copy config file
  copy:
    src: "files/{{ ansible_os_family }}/config"
    dest: "/etc/kubernetes/config" 
- name: Copy kubelet file
  template:
    src: "files/{{ ansible_os_family }}/kubelet.j2"
    dest: "/etc/kubernetes/kubelet"
 
- name: restart slave services
  service: name={{ item }} state=restarted enabled=yes
  with_items:
    - etcd
    - kube-proxy
    - kubelet
    - flanneld
    - docker
